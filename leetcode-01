方法一：蛮力法

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int l = nums.length;
        int[] ans = new int[2];
        int i,j;
        for(i = 0; i < l - 1; i++)
            for(j = i + 1; j < l; j++) {
                if(nums[i] + nums[j] == target) {
                    ans[0] = i;
                    ans[1] = j;
                }
            }
        return ans;
    }
}


方法二：哈希表法
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < nums.length; i++) {
            if(map.containsKey(target-nums[i]))
                return new[] {map.get(target-nums[i]), i};
            map.put(nums[i], i);
        }
        throw new IllegalArgumentException("No two sum solution!");
    }
}
